<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Post">

    <resultMap id="plist" type="category">
        <result property="post_no" column="post_no"/>
        <result property="title" column="title"/>
        <result property="hit" column="hit"/>
        <result property="regdate" column="regdate"/>
        <result property="updatedate" column="updatedate"/>
        <result property="thumnail" column="thumnail"/>
        <result property="ingredient" column="ingredient"/>
        <result property="bookmark" column="bookmark"/>
        <result property="post_tag" column="post_tag"/>
        <result property="tip" column="tip"/>
        <result property="writer" column="writer"/>
        <collection property="contentVOList" resultMap="clist"/>
        <collection property="memberDTOList" resultMap="mlist"/>
        <collection property="reportVOList" resultMap="rtlist"/>
        <collection property="bookmarkVOList" resultMap="blist"/>
        <collection property="subscribeVOList" resultMap="slist"/>
        <collection property="replyVOList" resultMap="rylist"/>
    </resultMap>

    <resultMap id="clist" type="content">
        <result property="post_no" column="post_no"/>
        <result property="step" column="step"/>
        <result property="image" column="image"/>
        <result property="manual" column="manual"/>
    </resultMap>

    <resultMap id="rtlist" type="report">
        <result property="post_no" column="post_no"/>
        <result property="userid" column="userid"/>
        <result property="rtuserid" column="rtuserid"/>
    </resultMap>

    <resultMap id="blist" type="book">
        <result property="userid" column="userid"/>
        <result property="post_no" column="post_no"/>
        <result property="buserid" column="buserid"/>
    </resultMap>

    <resultMap id="slist" type="sub">
        <result property="subscriber_id" column="subscriber_id"/>
        <result property="target_id" column="target_id"/>
    </resultMap>

    <resultMap id="rylist" type="reply">
        <result property="post_no" column="post_no"/>
        <result property="re_no" column="re_no"/>
        <result property="reviewer" column="reviewer"/>
        <result property="content" column="content"/>
        <result property="score" column="score"/>
        <result property="regdate" column="ryregdate"/>
        <result property="reviewernickname" column="reviewernickname"/>
    </resultMap>

    <resultMap id="mlist" type="member">
        <result property="userid" column="userid"/>
        <result property="userpw" column="userpw"/>
        <result property="nickname" column="nickname"/>
        <result property="email" column="email"/>
        <result property="subscribe" column="subscribe"/>
    </resultMap>

    <!-- 정보 가져오기 -->
    <select id="post_getList" resultMap="plist">
        Select
            p.title,p.hit,p.regdate,
            p.updatedate,p.thumnail,
            p.ingredient,
            p.post_tag,p.tip,
            m.userid,m.nickname,
            c.image,c.manual,
            rt.userid as rtuserid,b.userid as buserid,s.subscriber_id,
            ry.content,ry.score,ry.regdate as ryregdate,
            ry.reviewernickname ,ry.reviewer
        From recipe_post p
                 Inner join recipe_content c
                            On (p.post_no = c.post_no)
                 left outer join report rt
                                 On (p.post_no = rt.post_no)
                 left outer join bookmark b
                                 On (p.post_no = b.post_no)
                 left outer join subscribe s
                                 On (p.writer = s.target_id)
                 Inner join member m
                            On (p.writer = m.userid)
                 left outer join recipe_reply ry
                                 On (p.post_no = ry.post_no)
        Where p.post_no = #{post_no}
    </select>

    <select id="post_getList2" resultMap="plist">
        Select
            p.post_no,p.title,
            p.thumnail,p.ingredient,
            p.post_tag,p.tip,
            c.image,c.manual
        From recipe_post p
                 Inner join recipe_content c
                            On (p.post_no = c.post_no)
        Where p.post_no = #{post_no}
    </select>

    <!-- 조회수 +1 -->
    <update id="post_upHit">
        update recipe_post set hit=hit+1 where post_no=#{post_no}
    </update>

    <!-- 즐겨찾기 등록 -->
    <insert id="bookmark_insert">
        insert into bookmark values (#{userid}, #{post_no})
    </insert>

    <!-- 즐겨찾기 삭제 -->
    <delete id="bookmark_delete">
        delete from bookmark where userid=#{userid} and post_no=${post_no}
    </delete>

    <!-- 즐겨찾기 수 +1 -->
    <update id="bookmark_updatePlus">
        update recipe_post set bookmark=bookmark+1 where post_no=#{post_no}
    </update>

    <!-- 즐겨찾기 수 -1 -->
    <update id="bookmark_updateMinus">
        update recipe_post set bookmark=bookmark-1 where post_no=#{post_no}
    </update>

    <!-- 신고 등록 -->
    <insert id="report_insert">
        insert into report values (#{post_no}, #{userid})
    </insert>

    <!-- 신고 삭제 -->
    <delete id="report_delete">
        delete from report where userid=#{userid} and post_no=${post_no}
    </delete>

    <!-- 신고 수 +1 -->
    <update id="report_updatePlus">
        update recipe_post set report=report+1 where post_no=#{post_no}
    </update>

    <!-- 신고 수 -1 -->
    <update id="report_updateMinus">
        update recipe_post set report=report-1 where post_no=#{post_no}
    </update>

    <!-- 구독 등록 -->
    <insert id="subscribe_insert">
        insert into subscribe values (#{subscriber_id}, #{target_id})
    </insert>

    <!-- 구독 삭제 -->
    <delete id="subscribe_delete">
        delete subscribe where subscriber_id=#{subscriber_id} and target_id=#{target_id}
    </delete>

    <!-- 구독 +1 -->
    <update id="subscribe_updatePlus">
        update member set subscribe=subscribe+1 where userid=#{target_id}
    </update>

    <!-- 구독 -1 -->
    <update id="subscribe_updateMinus">
        update member set subscribe=subscribe-1 where userid=#{target_id}
    </update>

    <!-- 본문 삭제 -->
    <delete id="post_delete">
        delete from recipe_post where post_no=#{post_no}
    </delete>

    <select id="selectPostNextVal" resultType="int">
        select POST_NO_SEQ.nextval from DUAL
    </select>

    <update id="editPost">
        update RECIPE_POST set TITLE=#{title}, UPDATEDATE=sysdate, THUMNAIL=#{thumnail}, INGREDIENT=#{ingredient},
                               POST_TAG=#{post_tag}, TIP=#{tip}
                               where post_no=#{post_no}
    </update>

    <update id="editPostContent" parameterType="java.util.Map">
        <foreach collection="contentlist" item="content" separator=" ">
            update RECIPE_CONTENT set IMAGE=#{content.image}, MANUAL=#{content.manual}
            where STEP=#{content.step} and POST_NO=#{content.post_no}
        </foreach>
    </update>

    <insert id="insertPost">
        insert into RECIPE_POST(POST_NO, TITLE, REGDATE, THUMNAIL, INGREDIENT, POST_TAG, WRITER, TIP)
        values (#{post_no}, #{title}, sysdate, #{thumnail}, #{ingredient}, #{post_tag}, #{writer}, #{tip})
    </insert>

    <insert id="insertPostContent" parameterType="java.util.Map">
            <foreach collection="contentlist" item="content" separator=" " open="insert all" close="SELECT * FROM DUAL">
                into RECIPE_CONTENT (STEP, IMAGE, MANUAL, POST_NO)
                VALUES (#{content.step}, #{content.image}, #{content.manual}, #{content.post_no})
            </foreach>
    </insert>
</mapper>