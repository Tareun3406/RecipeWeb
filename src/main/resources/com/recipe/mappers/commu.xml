<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="commu">

	<!-- 02. 게시글 작성 -->
	<insert id="insert">
		INSERT INTO comu_post (
		comu_no, title,
		content,writer,regdate
		) VALUES (
		(SELECT NVL(MAX(comu_no)+1, 1)FROM
		comu_post),
		#{title}, #{content},(select userid from member where
		NICKNAME=#{writer}),
		sysdate)

	</insert>

	<!--03. 게시글 상세보기 조회 -->
	<select id="view" resultType="commu">
		SELECT
		comu_no,title,content,nickname,regdate,viewcnt FROM member inner join
		comu_post on member.userid =
		comu_post.writer WHERE
		comu_no = #{comu_no}
	</select>

	<!-- 04. 게시글 조회수 증가처리 -->
	<update id="increaseViewcnt">
		UPDATE comu_post SET viewcnt=viewcnt+1 WHERE comu_no
		= #{comu_no}
	</update>

	<!-- 05. 게시글 수정처리 -->
	<update id="updateArticle">
		UPDATE comu_post SET title = #{title}, content =
		#{content},writer=(select userid from member where
		NICKNAME=#{writer})
		 WHERE comu_no = #{comu_no}

	</update>
	<!-- 06. 게시글 삭제처리 -->
	<delete id="deleteArticle">
		DELETE FROM comu_post WHERE comu_no = #{comu_no}
	</delete>

	<!-- 검색 전후 레코드 개수 -->
	<select id="comu_count" resultType="int"><!-- resultType 속성은 반환 자료형 -->
		select count(comu_no) from member inner join comu_post on
		member.userid = comu_post.writer
		<where>
			<if test="find_field==''"></if><!-- 검색전 -->
			<if test="find_field=='title'"> <!-- 글제목 기준으로 검색할 때 -->
				title like #{find_name}
			</if>
			<if test="find_field=='content'"><!-- 글내용 기준으로 검색할때 -->
				content like #{find_name}
			</if>
		</where>
	</select>



	<!-- 검색 전후 자료실 목록 -->
	<select id="comu_list" resultType="commu">
		select * from (select rowNum
		rNum,comu_no,title,nickname,regdate,viewcnt from
		(select * from member
		inner join comu_post on member.userid =
		comu_post.writer
		<where>
			<if test="find_field==''"></if>
			<if test="find_field=='title'">
				title like #{find_name}
			</if>
			<if test="find_field=='content'">
				content like #{find_name} <!-- like는 ~와 비슷한 문자를 검색하는 검색연산자 -->
			</if>
		</where>
		)order by comu_no desc)
		where rNum &gt;=#{startrow} and rNum
		&lt;=#{endrow}
		<!-- #gt;= 은 >=의 뜻, &lt;= 은 <= 의 뜻 -->
	</select>



	<!-- 로그인한 유저 닉네임 가져오기 -->
	<select id="my_nickname" resultType="member">
		select * from member where
		member.userid=#{id}
	</select>

</mapper>