<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Member">
    <resultMap id="memberMap" type="member">
        <result property="userid" column="userid"/>
        <result property="userpw" column="userpw"/>
        <result property="nickname" column="nickname"/>
        <result property="email" column="email"/>

        <collection property="authList" resultMap="authMap"/>

    </resultMap>

    <resultMap id="authMap" type="auth">
        <result property="userid" column="userid"/>
        <result property="auth" column="auth"/>
    </resultMap>
    <!-- 구독+북마크+레시피본문 vo 맵 국동호 -->

    <resultMap id="mypageMap" type="member">
        <result property="userid" column="userid"/>
        <result property="userpw" column="userpw"/>
        <result property="nickname" column="nickname"/>
        <result property="email" column="email"/>

        <collection property="recipeList" resultMap="recipeMap"/>
        <collection property="bookList" resultMap="bookMap"/>
        <collection property="recipereplyList" resultMap="recipereplyMap"/>
        <collection property="subList" resultMap="subMap"/>
        <collection property="messageList" resultMap="messageMap"/>
        <collection property="messageList2" resultMap="message2Map"/>

    </resultMap>

    <resultMap id="recipeMap" type="recipe">
        <result property="post_no" column="post_no1"/>
    </resultMap>
    <resultMap id="recipereplyMap" type="recipereply">
        <result property="post_no" column="post_no2"/>
        <result property="content" column="content"/>
        <result property="regdate" column="regdate"/>
    </resultMap>
    <resultMap id="bookMap" type="book">
        <result property="userid" column="userid1"/>
        <result property="post_no" column="post_no3" />
    </resultMap>
    <resultMap id="messageMap" type="message">
        <result property="sender" column="sender"/>
        <result property="receiver" column="receiver"/>
        <result property="message" column="message"/>
        <result property="senddate" column="senddate"/>
        <result property="isread" column="isread"/>
        <result property="snickname" column="snickname"/>
    </resultMap>
    <resultMap id="message2Map" type="message">
        <result property="sender2" column="sender2"/>
        <result property="receiver2" column="receiver2"/>
        <result property="message2" column="message2"/>
        <result property="senddate2" column="senddate2"/>
        <result property="isread2" column="isread2"/>
        <result property="rnickname" column="rnickname"/>
    </resultMap>
    <resultMap id="subMap" type="sub">
        <result property="subscriber_id" column="subscriber_id"/>
        <result property="target_id" column="target_id"/>
    </resultMap>




    <!-- (끝)구독+북마크+레시피본문 vo 맵 국동호 -->


    <!-- 회원 정보 + 권한 조회 -->
    <select id="memberSelectAll" resultMap="memberMap">
        select MEMBER.USERID,USERPW,NICKNAME,EMAIL,AUTH from MEMBER left outer join AUTH on MEMBER.USERID = AUTH.USERID
        where AUTH.USERID = #{userid}
    </select>

    <!-- 회원정보 조회 -->
    <select id="memberSelect" resultType="member">
        select * from member where USERID=#{userid}
    </select>

    <!-- 회원가입 -->
    <insert id="memberInsert">
        insert into MEMBER VALUES (#{userid}, #{userpw}, #{nickname}, #{email}, 0)
    </insert>
    <insert id="authInsert">
        insert into AUTH values (#{userid}, #{auth})
    </insert>

    <!-- 아이디찾기 -->
    <select id="findID" resultType="member">
        select USERID from MEMBER where EMAIL=#{email}
    </select>

    <!-- 비밀번호 찾기 비밀번호 변경 -->
    <update id="memberUpdatePw">
        update MEMBER set USERPW = #{userpw} where USERID = #{userid} and EMAIL = #{email}
    </update>


    <!-- mypage -->
    <select id="my_list" resultMap="mypageMap">
        select a.userid,a.nickname,a.email,
               b.POST_NO as post_no1,
               c.post_no as post_no2,c.CONTENT,c.REGDATE,
               d.target_id,
               e.POST_NO as post_no3,
               s.SENDER,s.RECEIVER,s.MESSAGE,s.SENDDATE,s.snickname,
               r.sender2,r.receiver2,r.message2,r.senddate2,r.rnickname
        from MEMBER a
        left join RECIPE_POST b
            on (b.writer=a.USERID)
        left join recipe_reply c
            on (c.REVIEWER=a.USERID)

        left join (select SUBSCRIBER_ID,NICKNAME as target_id
                   from SUBSCRIBE
                       left join member on (SUBSCRIBE.TARGET_ID = MEMBER.USERID))d <!--구독한 쉐프아이디에 맞는 닉네임-->
            on (d.SUBSCRIBER_ID=a.USERID)

        left join BOOKMARK e
            on (a.USERID=e.USERID)

        left join (select SENDER,RECEIVER,SENDDATE,MESSAGE,NICKNAME as snickname
                     from MESSAGE
                         left join member on MESSAGE.SENDER=MEMBER.USERID where RECEIVER=#{id})s <!--받은 사람이 로그인한 사람일 때 쪽지테이블+보낸사람 닉네임 -->
            on (a.USERID=s.RECEIVER)

        left join (select SENDER as sender2,RECEIVER as receiver2,SENDDATE as senddate2,MESSAGE as message2,NICKNAME as rnickname
                     from MESSAGE
                         left join member on RECEIVER=MEMBER.USERID where sender=#{id})r <!--보낸 사람이 로그인한 사람일 때 쪽지테이블+받은사람 닉네임 -->
            on (a.USERID=r.sender2)

        where a.userid=#{id}

    </select>

</mapper>
